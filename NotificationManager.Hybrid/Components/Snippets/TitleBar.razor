@using NotificationManager.Hybrid.CSHelper
<div class="title-bar">
    <div class="page-title">
        @if (showBackOnSelectClick)
        {
            <img class="nm-icon px-2" src="icon/icons8-back-48.png" @onclick="BackClick" />
            <div style="padding-left: 10px">Select Multiple</div>
        }
        else
        {
            <img class="nm-icon px-2" src="icon/icons8-menu-48.png" />
            @if(!showSearchBar)
            {
                <div style="padding-left: 10px">@PageTitle</div>
            }
        }
    </div>
    <div class="page-actions">
        @if (showSearchBar)
        {
            <input type="text" class="search-bar" @oninput="HandleInput" placeholder="Search" />
            <img class="nm-icon px-2" src="icon/icons8-close-48.png" @onclick="cancelSearch" />
        }
        else 
        {
            @if (showBackOnSelectClick)
            {
                <input type="checkbox" class="select-checkbox" style="padding-right:10px;" @onchange="SelectAllClick" />
                <img class="nm-icon px-3" src="icon/icons8-trash-can-48.png" @onclick="DeleteClick" />
            }
            else
            {
                <img class="nm-icon px-2" src="icon/icons8-refresh-60.png" @onclick="RefreshClick" />
                <img class="nm-icon px-2" src="icon/icons8-check-all-80.png" @onclick="SelectMultipleClick" />
                <img class="nm-icon px-2" src="icon/icons8-search-50.png" @onclick="SearchClick" />
            }
        }
    </div>
    @if(showSearchBar) 
    {
        <style>
            .page-actions {
                width: 100%;
            }
        </style>
    }
</div>

@code {
    [Parameter] public string PageTitle { get; set; } = "Home";
    [Parameter] public EventCallback<bool> OnSelectMultipleClick { get; set; }
    [Parameter] public EventCallback<bool> OnSelectAllItem { get; set; }
    [Parameter] public EventCallback OnDeleteItem { get; set; }
    [Parameter] public EventCallback OnRefreshClick { get; set; }
    [Parameter] public EventCallback<string> OnSearchInput { get; set; }
    [Parameter] public EventCallback OnCancelSearch { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }
    public bool isSelectClicked { get; set; } = false;
    public bool showBackOnSelectClick = false;
    public bool isSelectAllChecked = false;
    public bool showSearchBar = false;

    public async void BackClick()
    {
        isSelectClicked = false;
        showBackOnSelectClick = false;
        await OnSelectMultipleClick.InvokeAsync(false);
        await OnSelectAllItem.InvokeAsync(false);
    }

    public async void SearchClick()
    {
        showSearchBar = true;
    }

    public async void cancelSearch()
    {
        showSearchBar = false;
        await OnCancelSearch.InvokeAsync();
    }

    public async void HandleInput(ChangeEventArgs args)
    {
        string searchText = args.Value.ToString() ?? string.Empty;
        await OnSearchInput.InvokeAsync(searchText);
    }

    private async void RefreshClick()
    {
        await OnRefreshClick.InvokeAsync();
    }

    private async void SelectMultipleClick()
    {
        isSelectClicked = true;
        showBackOnSelectClick = true;
        await OnSelectMultipleClick.InvokeAsync(true);
    }

    private async void SelectAllClick(ChangeEventArgs args)
    {
        await OnSelectAllItem.InvokeAsync((bool)args.Value);
    }

    private async void DeleteClick()
    {
        await OnDeleteItem.InvokeAsync();
    }
}