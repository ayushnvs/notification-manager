@using NotificationManager.Hybrid.CSHelper
<div class="title-bar">
    <div class="page-title">
        @if (showBackOnSelectClick)
        {
            <img class="nm-icon px-2" src="icon/icons8-back-48.png" @onclick="BackClick" />
            <div style="padding-left: 10px">Select Multiple</div>
        }
        else
        {
            <img class="nm-icon px-2" src="icon/icons8-menu-48.png" />
            <div style="padding-left: 10px">@PageTitle</div>
        }
    </div>
    <div class="page-actions">
        @if (showBackOnSelectClick)
        {
            <input type="checkbox" class="select-checkbox" style="padding-right:10px;" @onchange="SelectAllClick" />
            <img class="nm-icon px-3" src="icon/icons8-trash-can-48.png" @onclick="DeleteClick" />
        }
        else
        {
            <img class="nm-icon px-2" src="icon/icons8-search-50.png" />
            <img class="nm-icon px-2" src="icon/icons8-refresh-60.png" @onclick="RefreshClick" />
            <img class="nm-icon px-2" src="icon/icons8-check-all-80.png" @onclick="SelectMultipleClick" />
        }
    </div>
</div>

<style>
    .title-bar,
    .page-title,
    .page-actions {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        gap: 5px;
    }

    .title-bar {
        height: 4.5em;
        padding: 0px 10px;
        background-color: #f6f6f6;
        position: fixed;
        width: 100%;
    }

    .page-title {
        font-weight: 600;
        font-size: 20px;
    }

    .light-gray-bg {
        background-color: lightgray;
    }
</style>

@code {
    [Parameter] public string PageTitle { get; set; } = "Home";
    [Parameter] public EventCallback<bool> OnSelectMultipleClick { get; set; }
    [Parameter] public EventCallback<bool> OnSelectAllItem { get; set; }
    [Parameter] public EventCallback OnDeleteItem { get; set; }
    [Parameter] public EventCallback OnRefreshClick { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }
    public bool isSelectClicked { get; set; } = false;
    public bool showBackOnSelectClick = false;
    public bool isSelectAllChecked = false;
    public string anbackgroundCSS = "";

    private async void RefreshClick()
    {
        await OnRefreshClick.InvokeAsync();
    }

    private async void SelectMultipleClick()
    {
        isSelectClicked = true;
        showBackOnSelectClick = true;
        await OnSelectMultipleClick.InvokeAsync(true);
    }
    public async void BackClick()
    {
        isSelectClicked = false;
        showBackOnSelectClick = false;
        await OnSelectMultipleClick.InvokeAsync(false);
        await OnSelectAllItem.InvokeAsync(false);
    }

    private async void SelectAllClick(ChangeEventArgs args)
    {
        await OnSelectAllItem.InvokeAsync((bool)args.Value);
    }

    private async void DeleteClick()
    {
        await OnDeleteItem.InvokeAsync();
    }
}